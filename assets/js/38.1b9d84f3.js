(window.webpackJsonp=window.webpackJsonp||[]).push([[38],{506:function(t,e,r){"use strict";r.r(e);var a=r(63),v=Object(a.a)({},(function(){var t=this,e=t.$createElement,r=t._self._c||e;return r("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[r("p",[t._v("在上个系列专栏"),r("a",{attrs:{href:"https://juejin.im/post/6861941219938418702",target:"_blank",rel:"noopener noreferrer"}},[t._v("前端音视频的那些名词"),r("OutboundLink")],1),t._v("中，我们对比特率、帧率、分辨率、容器格式以及编码格式有所了解，如果还没看过的同学请点击上方链接自行跳转。")]),t._v(" "),r("p",[t._v("今天，我们来一起学习一下 WebRTC，相信你已经对这个前端音视频网红儿有所耳闻了。")]),t._v(" "),r("h1",{attrs:{id:"webrtc-web-real-time-communication-网页即时通信"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#webrtc-web-real-time-communication-网页即时通信"}},[t._v("#")]),t._v(" WebRTC Web Real-Time Communication 网页即时通信")]),t._v(" "),r("p",[t._v("WebRTC 于 2011 年 6 月 1 日开源，并在 Google、Mozilla、Opera 等大佬们的支持下被纳入 W3C 推荐标准，它给浏览器和移动应用提供了即时通信的能力。")]),t._v(" "),r("h2",{attrs:{id:"webrtc-优势及应用场景"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#webrtc-优势及应用场景"}},[t._v("#")]),t._v(" WebRTC 优势及应用场景")]),t._v(" "),r("h3",{attrs:{id:"优势"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#优势"}},[t._v("#")]),t._v(" 优势")]),t._v(" "),r("ul",[r("li",[t._v("跨平台(Web、Windows、MacOS、Linux、iOS、Android)")]),t._v(" "),r("li",[t._v("实时传输")]),t._v(" "),r("li",[t._v("音视频引擎")]),t._v(" "),r("li",[t._v("免费、免插件、免安装")]),t._v(" "),r("li",[t._v("主流浏览器支持")]),t._v(" "),r("li",[t._v("强大的打洞能力")])]),t._v(" "),r("h3",{attrs:{id:"应用场景"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#应用场景"}},[t._v("#")]),t._v(" 应用场景")]),t._v(" "),r("p",[t._v("在线教育、在线医疗、音视频会议、即时通讯工具、直播、共享远程桌面、P2P网络加速、游戏(狼人杀、线上KTV)等。")]),t._v(" "),r("p",{attrs:{align:"center"}},[r("img",{attrs:{src:"https://cdn.jsdelivr.net/gh/Geekhyt/blogimgbed/blog/webrtc0.jpg",width:"500"}})]),t._v(" "),r("p",[t._v("（有喜欢玩狼人杀的同学吗？有时间可以一起来一局，给我一轮听发言的时间，给你裸点狼坑，一个坑容错。）")]),t._v(" "),r("h2",{attrs:{id:"webrtc-整体架构"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#webrtc-整体架构"}},[t._v("#")]),t._v(" WebRTC 整体架构")]),t._v(" "),r("p",[t._v("拉回来，我们看一看 WebRTC 的整体架构，我用不同的颜色标识出了各层级所代表的含义。")]),t._v(" "),r("p",{attrs:{align:"center"}},[r("img",{attrs:{src:"https://cdn.jsdelivr.net/gh/Geekhyt/blogimgbed/blog/webrtc1.jpg",width:"500"}})]),t._v(" "),r("ul",[r("li",[t._v("Web 应用")]),t._v(" "),r("li",[t._v("Web API")]),t._v(" "),r("li",[t._v("WebRTC C++ API")]),t._v(" "),r("li",[t._v("Session Management 信令管理")]),t._v(" "),r("li",[t._v("Transport 传输层")]),t._v(" "),r("li",[t._v("Voice Engine 音频引擎")]),t._v(" "),r("li",[t._v("Video Engine 视频处理引擎")])]),t._v(" "),r("p",[t._v("我们再来看下核心的模块：")]),t._v(" "),r("h3",{attrs:{id:"voice-engine-音频引擎"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#voice-engine-音频引擎"}},[t._v("#")]),t._v(" Voice Engine 音频引擎")]),t._v(" "),r("p",[t._v("VoIP 软件开发商 Global IP Solutions 提供的 GIPS 引擎可以说是世界上最好的语音引擎，谷歌大佬一举将其收购并开源，也就是 WebRTC 中的 音频引擎。")]),t._v(" "),r("ul",[r("li",[t._v("iSAC：WebRTC 音频引擎的默认编解码器，针对 VoIP 和音频流的宽带和超宽带音频编解码器。")]),t._v(" "),r("li",[t._v("iLBC：VoIP 音频流的窄带语音编解码器。")]),t._v(" "),r("li",[t._v("NetEQ For Voice：针对音频软件实现的语音信号处理元件。NetEQ 算法是自适应抖动控制算法以及语音包丢失隐藏算法，能够有效的处理网络抖动和语音包丢失时对语音质量产生的影响。")]),t._v(" "),r("li",[t._v("Acoustic Echo Canceler：AEC，回声消除器。")]),t._v(" "),r("li",[t._v("Noise Reduction：NR，噪声抑制。")])]),t._v(" "),r("h3",{attrs:{id:"video-engine-视频处理引擎"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#video-engine-视频处理引擎"}},[t._v("#")]),t._v(" Video Engine 视频处理引擎")]),t._v(" "),r("p",[t._v("VPx 系列视频编解码器是 Google 大佬收购 ON2 公司后开源的。")]),t._v(" "),r("ul",[r("li",[t._v("VP8：视频图像编解码器，WebRTC 视频引擎默认的编解码器。")]),t._v(" "),r("li",[t._v("Video Jitter Buffer：视频抖动缓冲器模块。")]),t._v(" "),r("li",[t._v("Image Enhancements：图像质量增强模块。")])]),t._v(" "),r("h2",{attrs:{id:"webrtc-通信原理"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#webrtc-通信原理"}},[t._v("#")]),t._v(" WebRTC 通信原理")]),t._v(" "),r("h3",{attrs:{id:"媒体协商"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#媒体协商"}},[t._v("#")]),t._v(" 媒体协商")]),t._v(" "),r("p",[t._v("媒体协商也就是让双方可以找到共同支持的媒体能力，比如双方都支持的编解码器，这样才能实现彼此之间的音视频通信。")]),t._v(" "),r("h4",{attrs:{id:"sdp-session-description-protocal"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#sdp-session-description-protocal"}},[t._v("#")]),t._v(" SDP Session Description Protocal")]),t._v(" "),r("p",[t._v("媒体协商所交换的数据就是 SDP，说是协议，其实 SDP 并不是一个真正的协议，它就是一种描述各端“能力”的数据格式。")]),t._v(" "),r("p",{attrs:{align:"center"}},[r("img",{attrs:{src:"https://cdn.jsdelivr.net/gh/Geekhyt/blogimgbed/blog/webrtc2.jpg",width:"500"}})]),t._v(" "),r("p",[t._v("上图所示就是 SDP 的一部分，详细内容请参考："),r("a",{attrs:{href:"https://tools.ietf.org/html/rfc4566",target:"_blank",rel:"noopener noreferrer"}},[t._v("SDP: Session Description Protocol"),r("OutboundLink")],1)]),t._v(" "),r("p",[t._v("或者参考卡神的这篇文章："),r("a",{attrs:{href:"https://zhuanlan.zhihu.com/p/75492311",target:"_blank",rel:"noopener noreferrer"}},[t._v("WebRTC：会话描述协议SDP"),r("OutboundLink")],1)]),t._v(" "),r("h3",{attrs:{id:"网络协商"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#网络协商"}},[t._v("#")]),t._v(" 网络协商")]),t._v(" "),r("h4",{attrs:{id:"ice-interactive-connectivity-establishment-互动式连接建立"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#ice-interactive-connectivity-establishment-互动式连接建立"}},[t._v("#")]),t._v(" ICE Interactive Connectivity Establishment 互动式连接建立")]),t._v(" "),r("p",[t._v("想要建立连接，我们要需要拿到双方 IP 和端口的信息，在当下复杂的网络环境下，ICE 统一了各种 NAT 穿越技术(STUN、TURN)，可以让客户端成功地穿透远程用户与网络之间可能存在的各类防火墙。")]),t._v(" "),r("h4",{attrs:{id:"stun、turn"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#stun、turn"}},[t._v("#")]),t._v(" STUN、TURN")]),t._v(" "),r("p",[t._v("STUN：简单 UDP 穿透 NAT，可以使位于 NAT(或多重 NAT) 后的客户端找出自己的公网 IP 地址，以及查出自己位于哪种类型的 NAT 及 NAT 所绑定的 Internet 端口。")]),t._v(" "),r("p",[t._v("我们知道，NAT 主要有以下四个种类：")]),t._v(" "),r("ul",[r("li",[t._v("完全锥型 NAT")]),t._v(" "),r("li",[t._v("IP 限制锥型")]),t._v(" "),r("li",[t._v("端口限制锥型")]),t._v(" "),r("li",[t._v("对称型")])]),t._v(" "),r("p",[t._v("前三种都可以使用 STUN 穿透，而面对第四种类型，也是大型公司网络中经常采用的对称型 NAT ，这时的路由器只会接受之前连线过的节点所建立的连线。")]),t._v(" "),r("p",[t._v("那么想要处理这种网络情况，我们就需要使用 TURN (中继穿透 NAT) 技术。")]),t._v(" "),r("p",[t._v("TURN 是 STUN 的一个扩展，其主要添加了中继功能。在 STUN 服务器的基础上，再添加几台 TURN 服务器，如果 STUN 分配公网 IP 失败，则可以通过 TURN 服务器请求公网 IP 地址作为中继地址，将媒体数据通过 TURN 服务器进行中转。")]),t._v(" "),r("h4",{attrs:{id:"信令服务器-signal-server"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#信令服务器-signal-server"}},[t._v("#")]),t._v(" 信令服务器 Signal Server")]),t._v(" "),r("p",[t._v("拿到了双方的媒体信息(SDP)和网络信息(Candidate)后，我们还需要一台信令服务器作为中间商来转发交换它们。")]),t._v(" "),r("p",[t._v("信令服务器还可以实现一些 IM 功能，比如房间管理，用户进入、退出等。")]),t._v(" "),r("h2",{attrs:{id:"小结"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#小结"}},[t._v("#")]),t._v(" 小结")]),t._v(" "),r("p",[t._v("本文我们了解了 WebRTC 优势及应用场景、WebRTC 的整体架构及主要模块构成以及 WebRTC 的通信原理。这些基础知识和概念是需要我们牢记的，大家要记牢～")]),t._v(" "),r("h2",{attrs:{id:"参考"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#参考"}},[t._v("#")]),t._v(" 参考")]),t._v(" "),r("ul",[r("li",[t._v("《从 0 打造音视频直播系统》 李超")]),t._v(" "),r("li",[t._v("《WebRTC 音视频开发 React+Flutter+Go 实战》 亢少军")]),t._v(" "),r("li",[r("a",{attrs:{href:"https://webrtc.github.io/webrtc-org/architecture/",target:"_blank",rel:"noopener noreferrer"}},[t._v("https://webrtc.github.io/webrtc-org/architecture/"),r("OutboundLink")],1)]),t._v(" "),r("li",[r("a",{attrs:{href:"https://developer.mozilla.org/zh-CN/docs/Web/API/WebRTC_API",target:"_blank",rel:"noopener noreferrer"}},[t._v("https://developer.mozilla.org/zh-CN/docs/Web/API/WebRTC_API"),r("OutboundLink")],1)]),t._v(" "),r("li",[r("a",{attrs:{href:"https://www.w3.org/TR/webrtc/",target:"_blank",rel:"noopener noreferrer"}},[t._v("https://www.w3.org/TR/webrtc/"),r("OutboundLink")],1)])])])}),[],!1,null,null,null);e.default=v.exports}}]);