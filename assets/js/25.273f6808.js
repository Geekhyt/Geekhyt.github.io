(window.webpackJsonp=window.webpackJsonp||[]).push([[25],{493:function(s,t,a){"use strict";a.r(t);var n=a(63),e=Object(n.a)({},(function(){var s=this,t=s.$createElement,a=s._self._c||t;return a("ContentSlotsDistributor",{attrs:{"slot-key":s.$parent.slotKey}},[a("h2",{attrs:{id:"ecmascript"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#ecmascript"}},[s._v("#")]),s._v(" ECMAScript")]),s._v(" "),a("p",[a("code",[s._v("ECMAScript")]),s._v(" 是 "),a("a",{attrs:{href:"https://www.ecma-international.org/",target:"_blank",rel:"noopener noreferrer"}},[s._v("Ecma International"),a("OutboundLink")],1),s._v(" 颁布的一部语言标准，编号为 262，又称为 "),a("code",[s._v("ECMA-262")]),s._v("。")]),s._v(" "),a("p",[a("code",[s._v("Ecma International")]),s._v(" 则是一个制定信息和通讯技术方面的国际标准的组织，前身是欧洲计算机制造商协会("),a("code",[s._v("European Computer Manufacturers Association")]),s._v(")，随着计算机的国际化，机构名称改为其英文单词首字母缩写。")]),s._v(" "),a("p",[a("code",[s._v("ECMAScript")]),s._v(" 由 "),a("code",[s._v("EMCA International")]),s._v(" 的 "),a("a",{attrs:{href:"https://tc39.es/",target:"_blank",rel:"noopener noreferrer"}},[s._v("TC39"),a("OutboundLink")],1),s._v("（"),a("code",[s._v("Technical Committee 39")]),s._v("）技术委员会编写。")]),s._v(" "),a("p",[a("code",[s._v("TC39")]),s._v(" 会将编写完成的 "),a("code",[s._v("ECMAScript")]),s._v(" 标准文档提交给 "),a("code",[s._v("Ecma International")]),s._v("，并由其正式发布。")]),s._v(" "),a("p",[s._v("从 2015 年开始，"),a("code",[s._v("ECMAScript")]),s._v(" 每年都会发布一个正式版，并在标题中写上年份，比如"),a("code",[s._v("「ECMAScript® 2020 Language Specification, 11th edition」")]),s._v("，可简称为"),a("code",[s._v("ES2020")]),s._v("或"),a("code",[s._v("ES11")]),s._v("。")]),s._v(" "),a("h2",{attrs:{id:"五个流程阶段"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#五个流程阶段"}},[s._v("#")]),s._v(" 五个流程阶段")]),s._v(" "),a("p",[s._v("如果想要新增或是改写规范，一般要经历5个阶段，如"),a("a",{attrs:{href:"https://tc39.es/process-document/",target:"_blank",rel:"noopener noreferrer"}},[s._v("TC39 Process"),a("OutboundLink")],1),s._v("中所示：")]),s._v(" "),a("ul",[a("li",[s._v("Strawperson")]),s._v(" "),a("li",[s._v("Proposal")]),s._v(" "),a("li",[s._v("Draft")]),s._v(" "),a("li",[s._v("Candidate")]),s._v(" "),a("li",[s._v("Finished")])]),s._v(" "),a("p",[s._v("经历过这5个阶段，进入 Finished 状态的修改才会被列入正式版的规范。")]),s._v(" "),a("h2",{attrs:{id:"ecmascript2021"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#ecmascript2021"}},[s._v("#")]),s._v(" ECMAScript2021")]),s._v(" "),a("p",[a("a",{attrs:{href:"https://github.com/tc39/proposals/blob/master/finished-proposals.md",target:"_blank",rel:"noopener noreferrer"}},[s._v("https://github.com/tc39/proposals/blob/master/finished-proposals.md"),a("OutboundLink")],1)]),s._v(" "),a("p",[s._v("了解了 "),a("code",[s._v("ECMAScript")]),s._v("，下面就进入正文，让我们来看看已经确定的 ECMAScript2021 的新特性吧。")]),s._v(" "),a("p",{attrs:{align:"center"}},[a("img",{attrs:{src:"https://cdn.jsdelivr.net/gh/Geekhyt/blogimgbed/blog/es1.jpg",width:"500"}})]),s._v(" "),a("h2",{attrs:{id:"_1-string-prototype-replaceall"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_1-string-prototype-replaceall"}},[s._v("#")]),s._v(" 1.String.prototype.replaceAll")]),s._v(" "),a("p",[a("a",{attrs:{href:"https://github.com/tc39/proposal-string-replaceall",target:"_blank",rel:"noopener noreferrer"}},[s._v("https://github.com/tc39/proposal-string-replaceall"),a("OutboundLink")],1)]),s._v(" "),a("p",[s._v("先来回顾下 "),a("code",[s._v("String.prototype.replace")]),s._v(" 的用法：")]),s._v(" "),a("div",{staticClass:"language-js line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("const")]),s._v(" str "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v("'Stay Hungry. Stay Foolish.'")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("const")]),s._v(" newStr "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" str"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("replace")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[s._v("'Stay'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v("'Always'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\nconsole"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("log")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("newStr"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// Always Hungry. Stay Foolish.")]),s._v("\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br")])]),a("p",[s._v("如果我们这样写，只有第一个匹配的会被替换。")]),s._v(" "),a("p",[s._v("想要做到全部替换就需要使用正则表达式。")]),s._v(" "),a("div",{staticClass:"language-js line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("const")]),s._v(" str "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v("'Stay Hungry. Stay Foolish.'")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("const")]),s._v(" newStr "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" str"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("replace")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token regex"}},[s._v("/Stay/g")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v("'Always'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\nconsole"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("log")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("newStr"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// Always Hungry. Always Foolish.")]),s._v("\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br")])]),a("p",[s._v("不过在使用正则的时候，如果需求是匹配 "),a("code",[s._v("+")]),s._v(" 等符号时，还需要进行转义。如：")]),s._v(" "),a("p",[a("code",[s._v("/\\+/g")])]),s._v(" "),a("p",[s._v("聪明的你也许会想到另外一种方案：使用 "),a("code",[s._v("split + join")]),s._v(" 的方式")]),s._v(" "),a("p",[s._v("这里借用下官方的例子：")]),s._v(" "),a("div",{staticClass:"language-js line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("const")]),s._v(" queryString "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v("'q=query+string+parameters'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("const")]),s._v(" withSpaces "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" queryString"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("split")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[s._v("'+'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("join")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[s._v("' '")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// q=query string parameters")]),s._v("\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br")])]),a("p",[s._v("但这样做也是有性能开销的，加上这种操作十分常见。于是就诞生了 "),a("code",[s._v("String.prototype.replaceAll")]),s._v(" 这个 API，我们可以更加方便的来进行操作。")]),s._v(" "),a("div",{staticClass:"language-js line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("const")]),s._v(" str "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v("'Stay Hungry. Stay Foolish.'")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("const")]),s._v(" newStr "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" str"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("replaceAll")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[s._v("'Stay'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v("'Always'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\nconsole"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("log")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("newStr"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// Always Hungry. Always Foolish.")]),s._v("\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br")])]),a("div",{staticClass:"language-js line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("String")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("prototype"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("replaceAll")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("searchValue"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" replaceValue"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br")])]),a("p",[s._v("注意：当 "),a("code",[s._v("searchValue")]),s._v(" 是非全局正则表达式时，"),a("code",[s._v("replaceAll")]),s._v(" 会引发异常。如果 "),a("code",[s._v("searchValue")]),s._v(" 是全局正则表达式时，"),a("code",[s._v("replaceAll")]),s._v(" 与 "),a("code",[s._v("replace")]),s._v(" 行为是一致的。")]),s._v(" "),a("h2",{attrs:{id:"_2-promise-any"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_2-promise-any"}},[s._v("#")]),s._v(" 2.Promise.any")]),s._v(" "),a("p",[a("a",{attrs:{href:"https://github.com/tc39/proposal-promise-any",target:"_blank",rel:"noopener noreferrer"}},[s._v("https://github.com/tc39/proposal-promise-any"),a("OutboundLink")],1)]),s._v(" "),a("div",{staticClass:"language-js line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("const")]),s._v(" p "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" Promise"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("all")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v("p1"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" p2"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" p3"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br")])]),a("ul",[a("li",[a("code",[s._v("Promise.all")]),s._v(" (ES2015) 只有当传入的每个 Promise 实例(p1,p2,p3)的状态都变成 fulfilled 时，p 才 fulfilled，只要(p1,p2,p3)有一个被 rejected，p 的状态就变成 rejected。")]),s._v(" "),a("li",[a("code",[s._v("Promise.race")]),s._v(" (ES2015)  当传入的 Promise 实例(p1,p2,p3)中有一个率先改变状态，那么 p 的状态就跟着改变，也就是说返回最先改变的 Promise 实例的返回值。")]),s._v(" "),a("li",[a("code",[s._v("Promise.allSettled")]),s._v(" (ES2020) 只有等到所有传入的 Promise 实例(p1,p2,p3)都返回结果，不管是 fulfilled 还是 rejected，包装实例才会结束。")]),s._v(" "),a("li",[a("code",[s._v("Promise.any")]),s._v(" (ES2021) 当其中任何一个 Promise 完成(fulfilled)时，就返回那个已经有完成值的 Promise。如果所有的 Promise 都拒绝 (rejected), 那么返回一个拒绝的 Promise。")])]),s._v(" "),a("h3",{attrs:{id:"对比记忆"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#对比记忆"}},[s._v("#")]),s._v(" 对比记忆")]),s._v(" "),a("ul",[a("li",[s._v("我们可以把 "),a("code",[s._v("Promise.any()")]),s._v(" 理解成 "),a("code",[s._v("Promise.all()")]),s._v(" 的反向操作。")])]),s._v(" "),a("p",{attrs:{align:"center"}},[a("img",{attrs:{src:"https://cdn.jsdelivr.net/gh/Geekhyt/blogimgbed/blog/es2.gif",width:"500"}})]),s._v(" "),a("p",[a("strong",[s._v("致敬韦神！")])]),s._v(" "),a("ul",[a("li",[a("code",[s._v("Promise.any()")]),s._v(" 跟 "),a("code",[s._v("Promise.race()")]),s._v(" 方法很像，有一个不同点是：前者不会因为某个 "),a("code",[s._v("Promise")]),s._v(" 变成 "),a("code",[s._v("rejected")]),s._v(" 状态而结束。")])]),s._v(" "),a("p",[a("a",{attrs:{href:"https://es6.ruanyifeng.com/#docs/promise#Promise-all",target:"_blank",rel:"noopener noreferrer"}},[s._v("想要了解更多细节可以看阮老师的ECMAScript 6 入门"),a("OutboundLink")],1)]),s._v(" "),a("div",{staticClass:"language-js line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[s._v("Promise"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("any")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("promises"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("then")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token parameter"}},[s._v("first")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=>")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n        "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 任何一个Promise完成")]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token parameter"}},[s._v("error")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=>")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n        "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 所有的 Promise都拒绝了")]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br"),a("span",{staticClass:"line-number"},[s._v("7")]),a("br"),a("span",{staticClass:"line-number"},[s._v("8")]),a("br")])]),a("h3",{attrs:{id:"any-名字的由来"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#any-名字的由来"}},[s._v("#")]),s._v(" any 名字的由来")]),s._v(" "),a("p",[s._v("any 顾名思义，不仅清楚的描述了它的作用，而且在提供此功能的第三方库中都是这样命名的，用过的同学们一定觉得很亲切。")]),s._v(" "),a("ul",[a("li",[a("a",{attrs:{href:"https://github.com/kriskowal/q#combination",target:"_blank",rel:"noopener noreferrer"}},[s._v("https://github.com/kriskowal/q#combination"),a("OutboundLink")],1)]),s._v(" "),a("li",[a("a",{attrs:{href:"http://bluebirdjs.com/docs/api/promise.any.html",target:"_blank",rel:"noopener noreferrer"}},[s._v("http://bluebirdjs.com/docs/api/promise.any.html"),a("OutboundLink")],1)]),s._v(" "),a("li",[a("a",{attrs:{href:"https://github.com/m0ppers/promise-any",target:"_blank",rel:"noopener noreferrer"}},[s._v("https://github.com/m0ppers/promise-any"),a("OutboundLink")],1)]),s._v(" "),a("li",[a("a",{attrs:{href:"https://github.com/cujojs/when/blob/master/docs/api.md#whenany",target:"_blank",rel:"noopener noreferrer"}},[s._v("https://github.com/cujojs/when/blob/master/docs/api.md#whenany"),a("OutboundLink")],1)]),s._v(" "),a("li",[a("a",{attrs:{href:"https://github.com/sindresorhus/p-any",target:"_blank",rel:"noopener noreferrer"}},[s._v("https://github.com/sindresorhus/p-any"),a("OutboundLink")],1)])]),s._v(" "),a("h3",{attrs:{id:"可预见的作用"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#可预见的作用"}},[s._v("#")]),s._v(" 可预见的作用")]),s._v(" "),a("p",[s._v("官方提供了一个例子，可以应用 "),a("code",[s._v("Promise.any()")]),s._v(" 检查哪个站点访问最快。")]),s._v(" "),a("div",{staticClass:"language-js line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[s._v("Promise"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("any")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v("\n  "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("fetch")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[s._v("'https://v8.dev/'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("then")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=>")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v("'home'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("\n  "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("fetch")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[s._v("'https://v8.dev/blog'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("then")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=>")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v("'blog'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("\n  "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("fetch")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[s._v("'https://v8.dev/docs'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("then")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=>")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v("'docs'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("then")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token parameter"}},[s._v("first")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=>")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n  "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// Any of the promises was fulfilled.")]),s._v("\n  console"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("log")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("first"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n  "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// → 'home'")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("catch")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token parameter"}},[s._v("error")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=>")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n  "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// All of the promises were rejected.")]),s._v("\n  console"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("log")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("error"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br"),a("span",{staticClass:"line-number"},[s._v("7")]),a("br"),a("span",{staticClass:"line-number"},[s._v("8")]),a("br"),a("span",{staticClass:"line-number"},[s._v("9")]),a("br"),a("span",{staticClass:"line-number"},[s._v("10")]),a("br"),a("span",{staticClass:"line-number"},[s._v("11")]),a("br"),a("span",{staticClass:"line-number"},[s._v("12")]),a("br")])]),a("h2",{attrs:{id:"_3-weakrefs"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_3-weakrefs"}},[s._v("#")]),s._v(" 3.WeakRefs")]),s._v(" "),a("p",[a("a",{attrs:{href:"https://github.com/tc39/proposal-weakrefs",target:"_blank",rel:"noopener noreferrer"}},[s._v("https://github.com/tc39/proposal-weakrefs"),a("OutboundLink")],1)]),s._v(" "),a("p",[s._v("注意：要尽量避免使用 "),a("code",[s._v("WeakRef")]),s._v(" 和 "),a("code",[s._v("FinalizationRegistry")]),s._v("，垃圾回收机制依赖于 JavaScript 引擎的实现，不同的引擎或是不同版本的引擎可能会有所不同。")]),s._v(" "),a("p",[s._v("这个提案主要包括两个主要的新功能：")]),s._v(" "),a("ul",[a("li",[s._v("使用 "),a("code",[s._v("WeakRef")]),s._v(" 类创建对象的弱引用")]),s._v(" "),a("li",[s._v("使用 "),a("code",[s._v("FinalizationRegistry")]),s._v(" 类对对象进行垃圾回收后，运行用户定义的终结器")])]),s._v(" "),a("p",[s._v("它们可以分开使用也可以一起使用。")]),s._v(" "),a("p",[a("code",[s._v("WeakRef")]),s._v(" 实例不会阻止 GC 回收，但是 GC 会在两次 "),a("code",[s._v("EventLoop")]),s._v(" 之间回收 "),a("code",[s._v("WeakRef")]),s._v(" 实例。"),a("code",[s._v("GC")]),s._v(" 回收后的 "),a("code",[s._v("WeakRef")]),s._v(" 实例的 "),a("code",[s._v("deref()")]),s._v(" 方法将会返回"),a("code",[s._v("undefined")]),s._v("。")]),s._v(" "),a("div",{staticClass:"language-js line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("let")]),s._v(" ref "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("new")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("WeakRef")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("obj"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("let")]),s._v(" isLive "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" ref"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("deref")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 如果 obj 被垃圾回收了，那么 isLive 就是 undefined")]),s._v("\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br")])]),a("p",[a("code",[s._v("FinalizationRegistry")]),s._v(" 注册 "),a("code",[s._v("Callback")]),s._v("，某个对象被 GC 回收后调用。")]),s._v(" "),a("div",{staticClass:"language-js line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("const")]),s._v(" registry "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("new")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("FinalizationRegistry")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token parameter"}},[s._v("heldValue")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=>")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n  "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// ....")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 通过 register 注册任何你想要清理回调的对象，传入该对象和所含的值")]),s._v("\nregistry"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("register")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("theObject"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"some value"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br")])]),a("p",[s._v("关于更多的细节你可以查阅：")]),s._v(" "),a("ul",[a("li",[a("a",{attrs:{href:"https://github.com/tc39/proposal-weakrefs/blob/master/reference.md",target:"_blank",rel:"noopener noreferrer"}},[s._v("https://github.com/tc39/proposal-weakrefs/blob/master/reference.md"),a("OutboundLink")],1)])]),s._v(" "),a("h2",{attrs:{id:"_4-logical-assignment-operators-逻辑赋值操作符"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_4-logical-assignment-operators-逻辑赋值操作符"}},[s._v("#")]),s._v(" 4.Logical Assignment Operators 逻辑赋值操作符")]),s._v(" "),a("p",[a("a",{attrs:{href:"https://github.com/tc39/proposal-logical-assignment",target:"_blank",rel:"noopener noreferrer"}},[s._v("https://github.com/tc39/proposal-logical-assignment"),a("OutboundLink")],1)]),s._v(" "),a("p",[s._v("先来回顾下 "),a("code",[s._v("ES2020")]),s._v(" 新增的空值合并操作符 "),a("code",[s._v("??")])]),s._v(" "),a("p",[s._v("在当左侧操作数为 "),a("code",[s._v("undefined")]),s._v(" 或 "),a("code",[s._v("null")]),s._v(" 时，该操作符会将右侧操作数赋值给左侧变量。")]),s._v(" "),a("div",{staticClass:"language-js line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("const")]),s._v(" name "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("null")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("??")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v("'前端食堂'")]),s._v("\nconsole"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("log")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("name"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 前端食堂")]),s._v("\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br")])]),a("p",[s._v("有了逻辑赋值运算符，我们可以替换掉如下旧的写法：")]),s._v(" "),a("div",{staticClass:"language-js line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("const")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token function-variable function"}},[s._v("demo")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("function")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 旧的写法1")]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// if (!a) {")]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("//     a = '西瓜'")]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// }")]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 旧的写法2")]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// a = a || '西瓜'")]),s._v("\n\n    "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 新的写法")]),s._v("\n    a "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("||=")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v("'西瓜'")]),s._v(" \n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n\na "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("||=")]),s._v(" b"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 等同于 a || (a = b);")]),s._v("\n\na "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("&&=")]),s._v(" b"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 等同于 a && (a = b);")]),s._v("\n\na "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("??=")]),s._v(" b"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 等同于 a ?? (a = b);")]),s._v("\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br"),a("span",{staticClass:"line-number"},[s._v("7")]),a("br"),a("span",{staticClass:"line-number"},[s._v("8")]),a("br"),a("span",{staticClass:"line-number"},[s._v("9")]),a("br"),a("span",{staticClass:"line-number"},[s._v("10")]),a("br"),a("span",{staticClass:"line-number"},[s._v("11")]),a("br"),a("span",{staticClass:"line-number"},[s._v("12")]),a("br"),a("span",{staticClass:"line-number"},[s._v("13")]),a("br"),a("span",{staticClass:"line-number"},[s._v("14")]),a("br"),a("span",{staticClass:"line-number"},[s._v("15")]),a("br"),a("span",{staticClass:"line-number"},[s._v("16")]),a("br"),a("span",{staticClass:"line-number"},[s._v("17")]),a("br")])]),a("h2",{attrs:{id:"_5-numeric-separators-数字分隔符"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_5-numeric-separators-数字分隔符"}},[s._v("#")]),s._v(" 5.Numeric separators 数字分隔符")]),s._v(" "),a("p",[a("a",{attrs:{href:"https://github.com/tc39/proposal-numeric-separator",target:"_blank",rel:"noopener noreferrer"}},[s._v("https://github.com/tc39/proposal-numeric-separator"),a("OutboundLink")],1)]),s._v(" "),a("p",[s._v("数字的可读性随着数字变长而变差，数字分隔符会让长数字更加清晰。")]),s._v(" "),a("div",{staticClass:"language-js line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("const")]),s._v(" x "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("1000000000000")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("const")]),s._v(" y "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("1_000_000_000_000")]),s._v("\nconsole"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("log")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("x "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("===")]),s._v(" y"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// true")]),s._v("\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br")])]),a("p",[s._v("在二进制、十六进制、BigInt 等中都可以使用。")])])}),[],!1,null,null,null);t.default=e.exports}}]);