(window.webpackJsonp=window.webpackJsonp||[]).push([[61],{531:function(t,_,v){"use strict";v.r(_);var a=v(63),e=Object(a.a)({},(function(){var t=this,_=t.$createElement,v=t._self._c||_;return v("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[v("p",[t._v("前端圈技术的爆发式增长随之而来的开发人员学不动的疲惫感、焦虑感和不想跳出舒适圈的拖延懒惰。")]),t._v(" "),v("p",[v("code",[t._v("jQuery")]),t._v("华丽谢幕，"),v("code",[t._v("React v16")]),t._v("已经普及、"),v("code",[t._v("Angular9")]),t._v("和"),v("code",[t._v("Vue3")]),t._v("即将发布。三大框架越来越贴近"),v("code",[t._v("WebComponents")]),t._v("标准。\n"),v("code",[t._v("TypeScript")]),t._v("遍地开花，小程序日益火爆，快应用/PWA紧随其后……")]),t._v(" "),v("p",[t._v("站在浪潮之巅的我们最需要的是停下来思考，轰轰烈烈的技术本质是什么？")]),t._v(" "),v("p",[t._v("其实，"),v("strong",[t._v("轰轰烈烈的技术本质，是基础知识和核心概念")]),t._v("。")]),t._v(" "),v("p",[t._v("看你这篇题目的文章，是要讲HTTP咯？HTTP那么简单，我们大家每天都用，有什么好讲的？")]),t._v(" "),v("p",[t._v("在停下来思考技术本质的同时，我们也要不断的提高自己的认识层次，你所谓的简单是因为你没有听到“遥远的哭声”。")]),t._v(" "),v("p",{attrs:{align:"center"}},[v("img",{attrs:{src:"https://cdn.jsdelivr.net/gh/Geekhyt/blogimgbed/blog/http0.png",width:"500"}})]),t._v(" "),v("p",[t._v("(shout out to 男神黄执中)")]),t._v(" "),v("p",[t._v("有请我们今天的主角登场：HTTP")]),t._v(" "),v("p",[t._v("我将带你从HTTP的历史发展到各版本迭代主要特性来从全局的角度重新认识HTTP。")]),t._v(" "),v("h2",{attrs:{id:"http的世界观"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#http的世界观"}},[t._v("#")]),t._v(" HTTP的世界观")]),t._v(" "),v("p",[t._v("先来明确一下时间线，回到30年前的那个春天。")]),t._v(" "),v("p",[t._v("一切的一切都始于1989年的3月，万维网之父蒂姆·伯纳斯·李(Tim Berners-Lee)的一篇论文，创造了万维网，创造了HTTP。")]),t._v(" "),v("ul",[v("li",[v("p",[t._v("1991年"),v("code",[t._v("HTTP/0.9")]),t._v("发布  （没有RFC，版本号是后加上去的）")])]),t._v(" "),v("li",[v("p",[t._v("1996年5月"),v("code",[t._v("HTTP/1.0")]),t._v("在"),v("a",{attrs:{href:"https://tools.ietf.org/html/rfc1945",target:"_blank",rel:"noopener noreferrer"}},[t._v("RFC1945"),v("OutboundLink")],1),t._v("发布")])]),t._v(" "),v("li",[v("p",[t._v("1997年1月"),v("code",[t._v("HTTP/1.1")]),t._v("发布 "),v("a",{attrs:{href:"https://tools.ietf.org/html/rfc2616",target:"_blank",rel:"noopener noreferrer"}},[t._v("RFC2616是当前最新版本"),v("OutboundLink")],1)])]),t._v(" "),v("li",[v("p",[t._v("2014年"),v("code",[t._v("HTTP/1.1")]),t._v("再次修订，将大文档拆分为六份较小的文档，\n"),v("a",{attrs:{href:"https://tools.ietf.org/html/rfc7230",target:"_blank",rel:"noopener noreferrer"}},[t._v("RFC7230-7235"),v("OutboundLink")],1)])]),t._v(" "),v("li",[v("p",[t._v("2015年"),v("code",[t._v("HTTP/2")]),t._v("发布 "),v("a",{attrs:{href:"https://tools.ietf.org/html/rfc7540",target:"_blank",rel:"noopener noreferrer"}},[t._v("RFC7540"),v("OutboundLink")],1),t._v(" (基于谷歌的SPDY协议)")])]),t._v(" "),v("li",[v("p",[t._v("2018年，互联网标准化组织"),v("code",[t._v("IETF")]),t._v("提议将"),v("code",[t._v("HTTP over QUIC")]),t._v("更名为"),v("code",[t._v("HTTP/3")])])])]),t._v(" "),v("p",[t._v("如果希望全面的了解"),v("code",[t._v("HTTP/3")]),t._v("，推荐 "),v("strong",[t._v("Daniel Stenberg")]),t._v("（CURL 作者）的"),v("a",{attrs:{href:"https://http3-explained.haxx.se/en/",target:"_blank",rel:"noopener noreferrer"}},[t._v("HTTP/3详解"),v("OutboundLink")],1)]),t._v(" "),v("p",[t._v("当然如果你想看最新同步的中文，可以看我翻译的版本。\n欢迎指正错误和Star"),v("a",{attrs:{href:"https://hungryturbo.com/HTTP3-explained/",target:"_blank",rel:"noopener noreferrer"}},[t._v("HTTP/3详解中文版"),v("OutboundLink")],1)]),t._v(" "),v("p",[t._v("纵观HTTP的历史发展长河，究其原因，是技术和需求一直在推动着它的发展。")]),t._v(" "),v("h2",{attrs:{id:"http是什么？"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#http是什么？"}},[t._v("#")]),t._v(" HTTP是什么？")]),t._v(" "),v("p",[v("strong",[t._v("HTTP是一个在计算机世界里专门在两点之间传输文字、图片、音频、视频等超文本数据的约定和规范。")])]),t._v(" "),v("p",[t._v("HTTP通常跑在"),v("code",[t._v("TCP/IP协议栈")]),t._v("之上，依靠"),v("code",[t._v("IP协议实现寻址和路由")]),t._v("、"),v("code",[t._v("TCP协议实现可靠数据传输")]),t._v("、"),v("code",[t._v("DNS协议实现域名查找")]),t._v("、"),v("code",[t._v("SSL/TLS协议实现安全通信")]),t._v("。当然，WebSocket、HTTPDNS依赖于HTTP。")]),t._v(" "),v("h2",{attrs:{id:"http-0-9"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#http-0-9"}},[t._v("#")]),t._v(" HTTP/0.9")]),t._v(" "),v("div",{staticClass:"language-http line-numbers-mode"},[v("pre",{pre:!0,attrs:{class:"language-http"}},[v("code",[t._v("GET/index.html\n")])]),t._v(" "),v("div",{staticClass:"line-numbers-wrapper"},[v("span",{staticClass:"line-number"},[t._v("1")]),v("br")])]),v("p",[v("code",[t._v("HTTP/0.9")]),t._v("当时是为了学术交流，基于请求和响应的模式，在网络中传输HTML超文本的内容。")]),t._v(" "),v("p",[t._v("如上所示，只有一个请求行，没有HTTP请求头和请求体。同样，服务器也没有响应头信息，只是返回了数据。")]),t._v(" "),v("p",[t._v("因为都是HTML格式的文件，决定了返回的文件内容通过"),v("strong",[t._v("ASCII字符流")]),t._v("进行传输。")]),t._v(" "),v("h2",{attrs:{id:"http-1-0"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#http-1-0"}},[t._v("#")]),t._v(" HTTP/1.0")]),t._v(" "),v("p",[t._v("1994年低开启拨号上网，网景也在同年推出了第一款浏览器，人们对万维网的需求不再仅局限于学术交流。")]),t._v(" "),v("p",[t._v("W3C和HTTP工作组"),v("strong",[t._v("HTTP-WG")]),t._v("也在这个时代创建。为了满足人们对浏览器的需求(不光是HTML，还有CSS、JS、图片、音视频等)，文件格式不再局限于ASCII编码。")]),t._v(" "),v("p",[v("code",[t._v("HTTP/1.0")]),t._v("的解决办法是引入了请求头和响应头。")]),t._v(" "),v("div",{staticClass:"language-http line-numbers-mode"},[v("pre",{pre:!0,attrs:{class:"language-http"}},[v("code",[v("span",{pre:!0,attrs:{class:"token header-name keyword"}},[t._v("accept:")]),t._v(" text/html\n"),v("span",{pre:!0,attrs:{class:"token header-name keyword"}},[t._v("accept-encoding:")]),t._v(" gzip, deflate, br\n"),v("span",{pre:!0,attrs:{class:"token header-name keyword"}},[t._v("accept-Charset:")]),t._v(" ISO-8859-1,utf-8\n"),v("span",{pre:!0,attrs:{class:"token header-name keyword"}},[t._v("accept-language:")]),t._v(" zh-CN,zh\n")])]),t._v(" "),v("div",{staticClass:"line-numbers-wrapper"},[v("span",{staticClass:"line-number"},[t._v("1")]),v("br"),v("span",{staticClass:"line-number"},[t._v("2")]),v("br"),v("span",{staticClass:"line-number"},[t._v("3")]),v("br"),v("span",{staticClass:"line-number"},[t._v("4")]),v("br")])]),v("p",[t._v("同时也引入了"),v("strong",[t._v("状态码")]),t._v("，为了减轻服务器的压力，提供了"),v("strong",[t._v("Cache机制")]),t._v("。服务器需要统计客户端的基础信息(Windows 和 macOS)，加入了"),v("strong",[t._v("用户代理字段")]),t._v("。")]),t._v(" "),v("h2",{attrs:{id:"http-1-1"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#http-1-1"}},[t._v("#")]),t._v(" HTTP/1.1")]),t._v(" "),v("h3",{attrs:{id:"改进持久连接"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#改进持久连接"}},[t._v("#")]),t._v(" 改进持久连接")]),t._v(" "),v("p",[t._v("一个TCP连接上可以传输多个HTTP请求，只要浏览器或者服务器没有断开连接，该TCP会一直保持。")]),t._v(" "),v("p",[t._v("持久连接是默认开启的，如果想要关闭，在请求头中加上"),v("strong",[t._v("Connection:close")]),t._v("即可关闭。")]),t._v(" "),v("p",[t._v("目前浏览器中对于同一个域名，默认允许同时建立6个TCP持久连接。")]),t._v(" "),v("h3",{attrs:{id:"不成熟的http管线化"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#不成熟的http管线化"}},[t._v("#")]),t._v(" 不成熟的HTTP管线化")]),t._v(" "),v("p",[v("code",[t._v("HTTP/1.1")]),t._v(" 中试图通过"),v("strong",[t._v("管线化的技术")]),t._v("来解决队头阻塞的问题。但是因为各种原因，被各大厂商放弃治疗了。")]),t._v(" "),v("h3",{attrs:{id:"增加对虚拟主机的支持"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#增加对虚拟主机的支持"}},[t._v("#")]),t._v(" 增加对虚拟主机的支持")]),t._v(" "),v("p",[v("code",[t._v("HTTP/1.0")]),t._v("中每个域名都只绑定唯一的IP地址，因此一个服务器只能支持一个域名。")]),t._v(" "),v("p",[t._v("但是随着虚拟主机技术的发展，一台物理主机上绑定多个虚拟主机的需求大大提升，每个虚拟主机都有自己单独的域名，这些单独的域名都公用同一个IP地址。")]),t._v(" "),v("p",[t._v("因此，请求头中也增加了"),v("strong",[t._v("Host字段")]),t._v("，表示当前的域名地址，服务器可根据不同的Host值做不同的处理。")]),t._v(" "),v("h3",{attrs:{id:"增加对动态生产内容的支持"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#增加对动态生产内容的支持"}},[t._v("#")]),t._v(" 增加对动态生产内容的支持")]),t._v(" "),v("p",[v("code",[t._v("HTTP/1.0")]),t._v("需要在响应头中设置完整的数据大小"),v("strong",[t._v("Content-Length：900")]),t._v("，这样，浏览器就可以根据设置的数据大小来接收数据。")]),t._v(" "),v("p",[t._v("由于服务器端技术发展，页面都是动态生成的，传输数据之前并不知道最终数据大小，\n导致浏览器不知道何时会接受完所有的文件数据。")]),t._v(" "),v("p",[v("code",[t._v("HTTP/1.1")]),t._v("通过引入"),v("strong",[t._v("Chunk transfer机制")]),t._v("来解决问题，服务器将数据分割成若干个任意大小的数据块，每个数据块发送时会附上上一个数据块的长度，最后使用一个长度为0的块作为发送数据完成的标志。")]),t._v(" "),v("h3",{attrs:{id:"客户端cookie、安全机制"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#客户端cookie、安全机制"}},[t._v("#")]),t._v(" 客户端Cookie、安全机制")]),t._v(" "),v("p",[v("code",[t._v("HTTP1.1")]),t._v("引入了"),v("strong",[t._v("客户端Cookie机制")]),t._v("和"),v("strong",[t._v("安全机制")]),t._v("。")]),t._v(" "),v("h2",{attrs:{id:"http-2"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#http-2"}},[t._v("#")]),t._v(" HTTP/2")]),t._v(" "),v("h3",{attrs:{id:"http-1-1的缺陷"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#http-1-1的缺陷"}},[t._v("#")]),t._v(" HTTP/1.1的缺陷")]),t._v(" "),v("h4",{attrs:{id:"对带宽的利用率不理想"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#对带宽的利用率不理想"}},[t._v("#")]),t._v(" 对带宽的利用率不理想")]),t._v(" "),v("h5",{attrs:{id:"三个问题导致"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#三个问题导致"}},[t._v("#")]),t._v(" 三个问题导致")]),t._v(" "),v("ul",[v("li",[v("p",[t._v("TCP 的慢启动")])]),t._v(" "),v("li",[v("p",[t._v("同时开启了多条 TCP 连接，那么这些连接会竞争固定的带宽")])]),t._v(" "),v("li",[v("p",[v("code",[t._v("HTTP/1.1")]),t._v(" 队头阻塞的问题")])])]),t._v(" "),v("h3",{attrs:{id:"http-2多路复用"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#http-2多路复用"}},[t._v("#")]),t._v(" HTTP/2多路复用")]),t._v(" "),v("p",[v("code",[t._v("HTTP/2")]),t._v("使用多路复用机制解决了上述问题。")]),t._v(" "),v("p",[t._v("一个域名只使用一个 TCP 长连接和消除队头阻塞问题。通过引入"),v("strong",[t._v("二进制分帧层")]),t._v("，实现了 HTTP 的多路复用技术。")]),t._v(" "),v("h3",{attrs:{id:"http-2服务器推送"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#http-2服务器推送"}},[t._v("#")]),t._v(" HTTP/2服务器推送")]),t._v(" "),v("p",[t._v("服务器可以提前将数据推送到浏览器，浏览器有权选择是否接受。浏览器发送"),v("strong",[t._v("RST_STREAM帧")]),t._v("可以选择拒收。")]),t._v(" "),v("h3",{attrs:{id:"http-2头部压缩"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#http-2头部压缩"}},[t._v("#")]),t._v(" HTTP/2头部压缩")]),t._v(" "),v("p",[t._v("头部的压缩大大的提升了传输效率。HTTP/2开发了“HPACK”算法，在客户端和服务器建立“字典”，用索引号表示重复的字符串，还采用哈夫曼编码来压缩整数和字符串。")]),t._v(" "),v("h3",{attrs:{id:"http-2可以设置请求的优先级"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#http-2可以设置请求的优先级"}},[t._v("#")]),t._v(" HTTP/2可以设置请求的优先级")]),t._v(" "),v("p",[t._v("可以设置让某些重要的数据优先被服务器处理并返回。")]),t._v(" "),v("h2",{attrs:{id:"http-3"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#http-3"}},[t._v("#")]),t._v(" HTTP/3")]),t._v(" "),v("h3",{attrs:{id:"http-2的缺陷"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#http-2的缺陷"}},[t._v("#")]),t._v(" HTTP/2的缺陷")]),t._v(" "),v("h4",{attrs:{id:"tcp的队头阻塞"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#tcp的队头阻塞"}},[t._v("#")]),t._v(" TCP的队头阻塞")]),t._v(" "),v("p",[t._v("在 TCP 传输过程中，由于单个数据包的丢失而造成的阻塞称为 TCP 上的队头阻塞。\n"),v("code",[t._v("HTTP/2")]),t._v("只解决了应用层面的队头阻塞，队头阻塞的问题还存在于TCP协议本身。")]),t._v(" "),v("h4",{attrs:{id:"tcp建立连接的延时"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#tcp建立连接的延时"}},[t._v("#")]),t._v(" TCP建立连接的延时")]),t._v(" "),v("p",[v("code",[t._v("TCP")]),t._v("以及"),v("code",[t._v("TCP+TLS")]),t._v("建立连接的所产生的延时也是影响传输效率的一个主要因素。")]),t._v(" "),v("h4",{attrs:{id:"tcp协议僵化"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#tcp协议僵化"}},[t._v("#")]),t._v(" TCP协议僵化")]),t._v(" "),v("h5",{attrs:{id:"中间件僵化"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#中间件僵化"}},[t._v("#")]),t._v(" 中间件僵化")]),t._v(" "),v("p",[t._v("我们把在互联网的各处搭建的设备叫做中间设备(中间件)，比如路由器、NAT、防火墙、交换机等，它们通常依赖一些很少升级的软件，这些软件使用了大量的 TCP 特性，设置之后便很少进行更新。这就对我们我们更新TCP的时候造成了很大的困难，\n新协议的数据包经过这些中间件时，它们不会去理解包的内容从而丢弃掉这些数据包。")]),t._v(" "),v("h5",{attrs:{id:"操作系统"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#操作系统"}},[t._v("#")]),t._v(" 操作系统")]),t._v(" "),v("p",[t._v("因为 TCP 协议都是通过操作系统内核来实现的，应用程序只能使用不能修改。通常操作系统的更新都滞后于软件的更新，所以想要更新操作系统内核中的TCP协议也是非常困难的。")]),t._v(" "),v("h2",{attrs:{id:"quic协议"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#quic协议"}},[t._v("#")]),t._v(" QUIC协议")]),t._v(" "),v("p",[v("code",[t._v("HTTP/3")]),t._v(" 选择了一个折衷的方法——UDP 协议，"),v("strong",[t._v("基于 UDP 实现了类似于 TCP 的多路数据流、传输可靠性等功能，我们把这套功能称为QUIC 协议")]),t._v("。")]),t._v(" "),v("ul",[v("li",[v("p",[t._v("实现了类似 TCP 的流量控制、传输可靠性的功能")])]),t._v(" "),v("li",[v("p",[t._v("集成了 TLS 加密功能")])]),t._v(" "),v("li",[v("p",[t._v("实现了 HTTP/2 中的多路复用功能")])]),t._v(" "),v("li",[v("p",[t._v("实现了快速握手功能")])])]),t._v(" "),v("p",[t._v("关于HTTP/3更多详细的内容，请移步我翻译成中文版的"),v("a",{attrs:{href:"https://hungryturbo.com/HTTP3-explained/quic/%E5%BC%95%E8%A8%80.html",target:"_blank",rel:"noopener noreferrer"}},[t._v("HTTP/3详解"),v("OutboundLink")],1),t._v("。")]),t._v(" "),v("p",[t._v("欢迎Star"),v("a",{attrs:{href:"https://github.com/Geekhyt/HTTP3-explained",target:"_blank",rel:"noopener noreferrer"}},[t._v("仓库链接"),v("OutboundLink")],1),t._v("和提出错误或不对的地方。")]),t._v(" "),v("h2",{attrs:{id:"参考："}},[v("a",{staticClass:"header-anchor",attrs:{href:"#参考："}},[t._v("#")]),t._v(" 参考：")]),t._v(" "),v("p",[t._v("《浏览器工作原理与实践》")]),t._v(" "),v("p",[t._v("《透视HTTP协议》")]),t._v(" "),v("p",[t._v("《趣谈网络协议》")]),t._v(" "),v("p",[t._v("《Web协议详解与抓包实战》")])])}),[],!1,null,null,null);_.default=e.exports}}]);