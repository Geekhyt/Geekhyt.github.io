(window.webpackJsonp=window.webpackJsonp||[]).push([[13],{481:function(s,n,a){"use strict";a.r(n);var e=a(63),t=Object(e.a)({},(function(){var s=this,n=s.$createElement,a=s._self._c||n;return a("ContentSlotsDistributor",{attrs:{"slot-key":s.$parent.slotKey}},[a("h2",{attrs:{id:"历史背景"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#历史背景"}},[s._v("#")]),s._v(" 历史背景")]),s._v(" "),a("p",[s._v("互联网的全球化导致了互联网的数据量快速增长，加上在本世纪初摩尔定律在单核 CPU 上的失效，CPU 朝着多核方向发展，而 Apache 显然并没有做好多核架构的准备，它的一个进程同一时间只能处理一个连接，处理完一个请求后才能处理下一个，这无疑不能应对如今互联网上海量的用户。况且进程间切换的成本是非常高的。在这种背景下，Nginx 应运而生，可以轻松处理数百万、上千万的连接。\n")]),s._v(" "),a("h2",{attrs:{id:"nginx-优势"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#nginx-优势"}},[s._v("#")]),s._v(" Nginx 优势")]),s._v(" "),a("ul",[a("li",[s._v("高并发高性能")]),s._v(" "),a("li",[s._v("可扩展性好")]),s._v(" "),a("li",[s._v("高可靠性")]),s._v(" "),a("li",[s._v("热部署")]),s._v(" "),a("li",[s._v("开源许可证")])]),s._v(" "),a("h2",{attrs:{id:"nginx-主要应用场景"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#nginx-主要应用场景"}},[s._v("#")]),s._v(" Nginx 主要应用场景")]),s._v(" "),a("ul",[a("li",[s._v("静态资源服务，通过本地文件系统提供服务")]),s._v(" "),a("li",[s._v("反向代理服务、负载均衡")]),s._v(" "),a("li",[s._v("API服务、权限控制，减少应用服务器压力")])]),s._v(" "),a("h2",{attrs:{id:"nginx-配置文件和目录"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#nginx-配置文件和目录"}},[s._v("#")]),s._v(" Nginx 配置文件和目录")]),s._v(" "),a("p",[s._v("通过 "),a("code",[s._v("rpm -ql nginx")]),s._v(" 可以查看 Nginx 安装的配置文件和目录。")]),s._v(" "),a("p",[s._v("如图是我在某某云上安装的最新稳定版本的Nginx的配置文件及目录。")]),s._v(" "),a("p",{attrs:{align:"center"}},[a("img",{attrs:{src:"https://cdn.jsdelivr.net/gh/Geekhyt/blogimgbed/blog/nginx.jpg",width:"500"}})]),s._v(" "),a("ul",[a("li",[s._v("/etc/nginx/nginx.conf 核心配置文件")]),s._v(" "),a("li",[s._v("/etc/nginx/conf.d/default.conf 默认http服务器配置文件")]),s._v(" "),a("li",[s._v("/etc/nginx/fastcgi_params fastcgi配置")]),s._v(" "),a("li",[s._v("/etc/nginx/scgi_params scgi配置")]),s._v(" "),a("li",[s._v("/etc/nginx/uwsgi_params uwsgi配置")]),s._v(" "),a("li",[s._v("/etc/nginx/koi-utf")]),s._v(" "),a("li",[s._v("/etc/nginx/koi-win")]),s._v(" "),a("li",[s._v("/etc/nginx/win-utf 这三个文件是编码映射文件，因为作者是俄国人")]),s._v(" "),a("li",[s._v("/etc/nginx/mime.types 设置HTTP协议的Content-Type与扩展名对应关系的文件")]),s._v(" "),a("li",[s._v("/usr/lib/systemd/system/nginx-debug.service")]),s._v(" "),a("li",[s._v("/usr/lib/systemd/system/nginx.service")]),s._v(" "),a("li",[s._v("/etc/sysconfig/nginx")]),s._v(" "),a("li",[s._v("/etc/sysconfig/nginx-debug 这四个文件是用来配置守护进程管理的")]),s._v(" "),a("li",[s._v("/etc/nginx/modules 基本共享库和内核模块")]),s._v(" "),a("li",[s._v("/usr/share/doc/nginx-1.18.0 帮助文档")]),s._v(" "),a("li",[s._v("/usr/share/doc/nginx-1.18.0/COPYRIGHT 版权声明")]),s._v(" "),a("li",[s._v("/usr/share/man/man8/nginx.8.gz 手册")]),s._v(" "),a("li",[s._v("/var/cache/nginx Nginx的缓存目录")]),s._v(" "),a("li",[s._v("/var/log/nginx Nginx的日志目录")]),s._v(" "),a("li",[s._v("/usr/sbin/nginx 可执行命令")]),s._v(" "),a("li",[s._v("/usr/sbin/nginx-debug 调试执行可执行命令")])]),s._v(" "),a("p",[s._v("关于 Nginx 的常用命令以及配置文件语法很容易就可以搜到，本文不作赘述，下面从 Nginx 的功能以及实际场景出发看一看各个场景下 Nginx 可以提供给我们哪些配置项。在此之前，我们先来明确两个概念：")]),s._v(" "),a("h2",{attrs:{id:"正向代理-forward-proxy"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#正向代理-forward-proxy"}},[s._v("#")]),s._v(" 正向代理 Forward proxy")]),s._v(" "),a("p",[s._v("一句话解释正向代理，正向代理的对象是客户端，服务器端看不到真正的客户端。\n")]),a("p",{attrs:{align:"center"}},[a("img",{attrs:{src:"https://cdn.jsdelivr.net/gh/Geekhyt/blogimgbed/blog/ forward-proxy.jpg",width:"500"}})]),a("p"),s._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v("resolver 8.8.8.8 # 谷歌的域名解析地址\nserver {\n\tlocation / {\n      # 当客户端请求我的时候，我会把请求转发给它\n      # $http_host 要访问的主机名 $request_uri 请求路径\n      proxy_pass http://$http_host$request_uri;\n\t}\n}\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br"),a("span",{staticClass:"line-number"},[s._v("7")]),a("br"),a("span",{staticClass:"line-number"},[s._v("8")]),a("br")])]),a("h2",{attrs:{id:"反向代理-reverse-proxy"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#反向代理-reverse-proxy"}},[s._v("#")]),s._v(" 反向代理 Reverse proxy")]),s._v(" "),a("p",[s._v("一句话解释反向代理，反向代理的对象是服务端，客户端看不到真正的服务端。")]),s._v(" "),a("p",{attrs:{align:"center"}},[a("img",{attrs:{src:"https://cdn.jsdelivr.net/gh/Geekhyt/blogimgbed/blog/reverse-proxy.jpg",width:"500"}})]),s._v("\n## 跨域\n跨域是前端工程师都会面临的场景，跨域的解决方案有很多。不过要知道在生产中，要么使用 CORS 、要么使用 Nginx 反向代理来解决跨域。在 Nginx 的配置文件中进行如下配置即可：\n"),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v("server {\n    listen   80;\n    server_name   localhost; # 用户访问 localhost，反向代理到 http://webcanteen.com\n    location / {\n        proxy_pass http://webcanteen.com\n    }\n}\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br"),a("span",{staticClass:"line-number"},[s._v("7")]),a("br")])]),a("h2",{attrs:{id:"gzip"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#gzip"}},[s._v("#")]),s._v(" Gzip")]),s._v(" "),a("p",[s._v("Gzip 是互联网上非常普遍的一种数据压缩格式，对于纯文本来说可以压缩到原大小的 40%，可以节省大量的带宽。不过需要注意的是，启用 Gzip 所需的 HTTP 最低版本是 1.1。")]),s._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v("location ~ .*\\. (jpg|png|gif)$ {\n    gzip off; #关闭压缩\n    root /data/www/images;\n}\nlocation ~ .*\\. (html|js|css)$ {\n    gzip on; #启用压缩\n    gzip_min_length 1k; # 超过1K的文件才压缩\n    gzip_http_version 1.1; # 启用gzip压缩所需的HTTP最低版本\n    gzip_comp_level 9; # 压缩级别，压缩比率越高，文件被压缩的体积越小\n    gzip_types text/css application/javascript; # 进行压缩的文件类型\n    root /data/www/html;\n}\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br"),a("span",{staticClass:"line-number"},[s._v("7")]),a("br"),a("span",{staticClass:"line-number"},[s._v("8")]),a("br"),a("span",{staticClass:"line-number"},[s._v("9")]),a("br"),a("span",{staticClass:"line-number"},[s._v("10")]),a("br"),a("span",{staticClass:"line-number"},[s._v("11")]),a("br"),a("span",{staticClass:"line-number"},[s._v("12")]),a("br")])]),a("h2",{attrs:{id:"请求限制"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#请求限制"}},[s._v("#")]),s._v(" 请求限制")]),s._v(" "),a("p",[s._v("对于大流量恶意的访问，会造成带宽的浪费，给服务器增加压力。往往对于同一 IP 的连接数以及并发数进行限制。")]),s._v(" "),a("p",[s._v("关于请求限制主要有两种类型：")]),s._v(" "),a("ul",[a("li",[s._v("limit_conn_module 连接频率限制")]),s._v(" "),a("li",[s._v("limit_req_module 请求频率限制")])]),s._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v("# $binary_remote_addr 远程IP地址 zone 区域名称 10m内存区域大小\nlimit_conn_zone $binary_remote_addr zone=coon_zone:10m;\nserver {\n    # conn_zone 设置对应的共享内存区域 1是限制的数量\n\tlimit_conn conn_zone 1;\n}\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br")])]),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v("# $binary_remote_addr 远程IP地址 zone 区域名称 10m内存区域大小 rate 为请求频率 1s 一次\nlimit_req_zone $binary_remote_addr zone=req_zone:10m rate=1r/s;\nserver {\n    location / {\n        # 设置对应的共享内存区域 burst最大请求数阈值 nodelay不希望超过的请求被延迟\n        limit_req zone=req_zone burst=5 nodelay;\n    }\n}\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br"),a("span",{staticClass:"line-number"},[s._v("7")]),a("br"),a("span",{staticClass:"line-number"},[s._v("8")]),a("br")])]),a("h2",{attrs:{id:"访问控制"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#访问控制"}},[s._v("#")]),s._v(" 访问控制")]),s._v(" "),a("p",[s._v("关于访问控制主要有两种类型：")]),s._v(" "),a("ul",[a("li",[s._v("-http_access_module 基于 IP 的访问控制")]),s._v(" "),a("li",[s._v("-http_auth_basic_module 基于用户的信任登陆")])]),s._v(" "),a("p",[s._v("(基于用户的信任登陆不是很安全，本文不做配置介绍)")]),s._v(" "),a("p",[s._v("以下是基于 IP 的访问控制：")]),s._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v("server {\n\tlocation ~ ^/index.html {\n\t\t# 匹配 index.html 页面 除了 127.0.0.1 以外都可以访问\n\t\tdeny 127.0.0.1;\n\t\tallow all;\n\t}\n}\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br"),a("span",{staticClass:"line-number"},[s._v("7")]),a("br")])]),a("h2",{attrs:{id:"ab命令"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#ab命令"}},[s._v("#")]),s._v(" ab命令")]),s._v(" "),a("p",[s._v("ab命令全称为：Apache bench，是 Apache 自带的压力测试工具，也可以测试 Nginx、IIS 等其他 Web 服务器。")]),s._v(" "),a("ul",[a("li",[s._v("-n 总共的请求数")]),s._v(" "),a("li",[s._v("-c 并发的请求数")])]),s._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v("ab -n 1000 -c 5000 http://127.0.0.1/\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br")])]),a("h2",{attrs:{id:"防盗链"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#防盗链"}},[s._v("#")]),s._v(" 防盗链")]),s._v(" "),a("p",[s._v("防盗链的原理就是根据请求头中 referer 得到网页来源，从而实现访问控制。这样可以防止网站资源被非法盗用，从而保证信息安全，减少带宽损耗，减轻服务器压力。")]),s._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v("location ~ .*\\.(jpg|png|gif)$ { # 匹配防盗链资源的文件类型\n    # 通过 valid_referers 定义合法的地址白名单 $invalid_referer 不合法的返回403  \n    valid_referers none blocked 127.0.0.1;\n    if ($invalid_referer) {\n        return 403;\n    }\n}\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br"),a("span",{staticClass:"line-number"},[s._v("7")]),a("br")])]),a("h2",{attrs:{id:"负载均衡-load-balance"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#负载均衡-load-balance"}},[s._v("#")]),s._v(" 负载均衡 Load Balance")]),s._v(" "),a("p",[s._v("当我们的网站需要解决高并发、海量数据问题时，就需要使用负载均衡来调度服务器。将请求合理的分发到应用服务器集群中的一台台服务器上。")]),s._v(" "),a("p",{attrs:{align:"center"}},[a("img",{attrs:{src:"https://cdn.jsdelivr.net/gh/Geekhyt/blogimgbed/blog/load-balance.jpg",width:"500"}})]),s._v(" "),a("p",[s._v("Nginx 可以为我们提供负载均衡的能力，具体配置如下：")]),s._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v("# upstream 指定后端服务器地址\n# weight 设置权重\n# server 中会将 http://webcanteen 的请求转发到 upstream 池中\nupstream webcanteen {\n    server 127.0.0.1:66 weight=10;\n    server 127.0.0.1:77 weight=1;\n    server 127.0.0.1:88 weight=1;\n}\nserver {\n    location / {\n        proxy_pass http://webcanteen\n    }\n}\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br"),a("span",{staticClass:"line-number"},[s._v("7")]),a("br"),a("span",{staticClass:"line-number"},[s._v("8")]),a("br"),a("span",{staticClass:"line-number"},[s._v("9")]),a("br"),a("span",{staticClass:"line-number"},[s._v("10")]),a("br"),a("span",{staticClass:"line-number"},[s._v("11")]),a("br"),a("span",{staticClass:"line-number"},[s._v("12")]),a("br"),a("span",{staticClass:"line-number"},[s._v("13")]),a("br")])]),a("h3",{attrs:{id:"后端服务器状态"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#后端服务器状态"}},[s._v("#")]),s._v(" 后端服务器状态")]),s._v(" "),a("p",[s._v("后端服务器支持以下的状态配置：")]),s._v(" "),a("ul",[a("li",[s._v("down：当前服务器不参与负载均衡")]),s._v(" "),a("li",[s._v("backup：当其他节点都无法使用时的备用服务器")]),s._v(" "),a("li",[s._v("max_fails：允许请求失败的次数，若到达就会休眠")]),s._v(" "),a("li",[s._v("fail_timeout：经过max_fails次失败后，服务器的暂停时间，默认为10s")]),s._v(" "),a("li",[s._v("max_conns：限制每个服务器的最大接收连接数")])]),s._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v("upstream webcanteen {\n\tserver 127.0.0.1:66 down;\n\tserver 127.0.0.1:77 backup;\n\tserver 127.0.0.1:88  max_fails=3 fail_timeout=10s;\n\tserver 127.0.0.1:99 max_conns=1000;\n}\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br")])]),a("h3",{attrs:{id:"分配方式"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#分配方式"}},[s._v("#")]),s._v(" 分配方式")]),s._v(" "),a("ul",[a("li",[s._v("轮询(默认），每个请求按照时间顺序轮流分配到不同的后端服务器，如果某台后端服务器宕机，Nginx 轮询列表会自动将它去除掉。")]),s._v(" "),a("li",[s._v("weight(加权轮询)，轮询的加强版，weight 和访问几率成正比，主要用于后端服务器性能不均的场景。")]),s._v(" "),a("li",[s._v("ip_hash，每个请求按照访问 IP 的 hash 结果分配，这样每个访问可以固定访问一个后端服务器。")]),s._v(" "),a("li",[s._v("url_hash，按照访问 URL 的 hash 结果来分配请求，使得每个URL定向到同一个后端服务器上，主要应用于后端服务器为缓存时的场景。")]),s._v(" "),a("li",[s._v("自定义hash，基于任意关键字作为 hash key 实现 hash 算法的负载均衡")]),s._v(" "),a("li",[s._v("fair，按照后端服务器的响应时间来分配请求，响应时间短则优先分配。")])])])}),[],!1,null,null,null);n.default=t.exports}}]);